name: Deploy Fly

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deploy Environment'
        required: false
        default: 'production'
        type: choice
        options:
          - production
          - test
      server:
        description: 'Deploy Server'
        type: boolean
        required: true
        default: false

jobs:
  web:
    name: Deploy Web ${{ github.event.inputs.environment }}

    runs-on: ubuntu-latest

    concurrency: deploy-fly-web-${{ github.event.inputs.environment }}-group

    steps:
      - uses: actions/checkout@v4

      - uses: superfly/flyctl-actions/setup-flyctl@master

      - run: |
          flyctl deploy --config ./apps/frontend/web/fly.toml \
            --app animegarden-web-${{ github.event.inputs.environment }} \
            --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  server:
    name: Deploy Server

    runs-on: ubuntu-latest

    if: ${{ github.event.inputs.environment == 'production' && github.event.inputs.server }}

    concurrency: deploy-fly-server-production-group

    steps:
      - uses: actions/checkout@v4

      - uses: superfly/flyctl-actions/setup-flyctl@master

      - run: |
          flyctl deploy --config ./apps/backend/manager/fly.server.toml \
            --app animegarden-server-production --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  feed:
    name: Deploy Feed Server

    runs-on: ubuntu-latest

    if: ${{ github.event.inputs.environment == 'production' && github.event.inputs.server }}

    concurrency: deploy-fly-feed-production-group

    steps:
      - uses: actions/checkout@v4

      - uses: superfly/flyctl-actions/setup-flyctl@master

      - run: |
          flyctl deploy --config ./apps/backend/manager/fly.feed.toml \
            --app animegarden-feed-production --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
