---
import type { Resource } from 'animegarden';

import { formatInTimeZone } from 'date-fns-tz';

import { DisplayType, DisplayTypeColor } from '../constant';

import Tag from './Tag.astro';

import { getPikPakUrlChecker } from '@/utils';

export interface Props {
  resources: Resource<{ tracker: true }>[];
}

const { resources } = Astro.props;

const search = Astro.url.searchParams;

function getDetailHref(r: Resource) {
  return `/detail/${r.provider}/${r.providerId}`;
}

function followSearch(params: Record<string, string>) {
  const s = new URLSearchParams(search);
  for (const [key, value] of Object.entries(params)) {
    s.set(key, value);
  }
  return s.toString();
}
---

<div class="overflow-y-auto w-full">
  <table class="resources-table border-collapse min-y-[1080px] w-full">
    <colgroup>
      <col class="py3 w-[160px] min-w-[100px] lt-lg:w-[100px] lt-sm:w-[100px]" />
      <col class="py3 px2 text-left min-w-[600px] lg:min-w-[480px] md:min-w-[300px]" />
      <col class="w-[1px] whitespace-nowrap" />
      <col class="w-[1px] whitespace-nowrap" />
    </colgroup>
    <thead class="resources-table-head border-b border-b-2 text-lg lt-lg:text-base">
      <tr class="">
        <th class="py3 w-[160px] min-w-[100px] lt-lg:w-[100px] lt-sm:w-[100px]">发布时间</th>
        <th class="py3 px2 text-left min-w-[600px] lg:min-w-[480px] md:min-w-[300px]">标题</th>
        <!-- <th class="py3 min-w-[80px] lt-md:min-w-[48px]">类型</th> -->
        <th class="py3">发布者</th>
        <th class="py3 px2 text-left">播放 / 下载</th>
      </tr>
    </thead>
    <tbody class="resources-table-body divide-y border-b text-sm lt-lg:text-xs"
      >{
        resources.map((r) => (
          <tr class="">
            <td class="py2 text-center">
              <a
                href={getDetailHref(r)}
                class="text-link-active"
                aria-label={`Go to resource detail of ${r.title}`}
              >
                {formatInTimeZone(new Date(r.createdAt), 'Asia/Shanghai', 'yyyy-MM-dd HH:mm')}
              </a>
            </td>
            <td class="py2 pl2 lt-sm:pl1">
              <div class="flex items-center justify-start">
                <div class="flex-1">
                  <span class="mr3">
                    {['動畫', '季度全集', '日劇', '特攝'].includes(r.type) ? (
                      <>
                        <a
                          href={getPikPakUrlChecker(r.magnet)}
                          class="text-link mr1"
                          aria-label={`Go to download resource of ${r.title}`}
                          target="_blank"
                        >
                          {r.title}
                        </a>
                        <a
                          href={getDetailHref(r)}
                          class="text-link i-carbon-launch vertical-middle"
                          aria-label={`Go to resource detail of ${r.title}`}
                        />
                      </>
                    ) : (
                      <a
                        href={getDetailHref(r)}
                        class="text-link"
                        aria-label={`Go to resource detail of ${r.title}`}
                      >
                        {r.title}
                      </a>
                    )}
                  </span>
                  <a
                    href={`/resources/1?${followSearch({ type: r.type })}`}
                    class="inline-block select-none"
                    aria-label={`Go to resources list of type ${r.type}`}
                  >
                    <Tag
                      text={r.type in DisplayType ? DisplayType[r.type] : r.type}
                      color="bg-light-600 hover:bg-light-700"
                      className={`px2 py1 text-xs text-center text-base-600 ${DisplayTypeColor[r.type]} `}
                    />
                  </a>
                </div>
              </div>
            </td>
            <td class="py2 px2 lt-sm:px0">
              <div class="flex justify-center items-center">
                {r.fansub ? (
                  <a
                    href={`/resources/1?${followSearch({ fansubId: r.fansub.id })}`}
                    class="block w-max"
                    aria-label={`Go to resources list of fansub ${r.fansub.name}`}
                  >
                    <Tag text={r.fansub.name} className={`text-xs hover:bg-gray-300`} />
                  </a>
                ) : r.publisher ? (
                  <a
                    href={`/resources/1?${followSearch({ publisherId: r.publisher.id })}`}
                    class="block w-max"
                    aria-label={`Go to resources list of publisher ${r.publisher.name}`}
                  >
                    <Tag text={r.publisher.name} className={`text-xs hover:bg-gray-300`} />
                  </a>
                ) : null}
              </div>
            </td>
            <td class="py2 px2">
              <div class="flex gap1 items-center justify-start">
                <a
                  href={getPikPakUrlChecker(r.magnet)}
                  data-resource-title={r.title}
                  class="play i-carbon-play text-2xl text-base-500 hover:text-base-900"
                  aria-label="Play resource"
                  target="_blank"
                />
                <a
                  href={r.magnet + r.tracker}
                  data-resource-title={r.title}
                  class="download i-carbon-download text-2xl text-base-500 hover:text-base-900"
                  aria-label="Download resource"
                />
                <span class="text-xs text-base-400 whitespace-nowrap">{r.size}</span>
              </div>
            </td>
          </tr>
        ))
      }</tbody
    >
  </table>

  <script>
    import { hydrateNodesEvent } from '../lib/hydrate';
    import { triggerDownloadEvent, triggerPikPakEvent } from '../clarity';

    hydrateNodesEvent('.resources-table a.play', 'click', (node, ev) => {
      const target = ev.target as HTMLAnchorElement;
      const title = target.getAttribute('data-resource-title');
      if (title) {
        triggerPikPakEvent(title);
      }
    });

    hydrateNodesEvent('.resources-table a.download', 'click', (node, ev) => {
      const target = ev.target as HTMLAnchorElement;
      const title = target.getAttribute('data-resource-title');
      if (title) {
        triggerDownloadEvent(title);
      }
    });
  </script>
</div>
