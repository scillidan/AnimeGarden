---
import { APP_HOST } from '~build/meta';

import Analytics from '~analytics/scripts.astro';
import { pwaInfo } from 'virtual:pwa-info';
import { ViewTransitions } from 'astro:transitions';

import { Toaster } from '@/components/ui/sonner';

import { Menu } from '../components/Menu';
import Search from '../components/Search/Search';
import Loading from '../components/Loading.astro';
import Dropdown from '../components/Dropdown.astro';

import { getRuntimeEnv } from '../utils';
import { types, fansubs } from '../constant';

export interface Props {
  title: string;

  active: string;

  description?: string;

  timestamp?: Date;

  canonicalURL?: string;

  feedURL?: string;
}

const {
  title,
  canonicalURL,
  description = 'Anime Garden 是動漫花園的第三方镜像站，動漫愛好者的自由交流平台。用户可以搜索最新的动画，也可以按照标题、字幕组等条件筛选和搜索自己感兴趣的动画资源。'
} = Astro.props;

const url = Astro.url.pathname;
const search = Astro.url.searchParams;

const feed = Astro.props.feedURL;
const active = Astro.props.active;

const env = getRuntimeEnv(Astro.locals);
const timestamp =
  Astro.props.timestamp ??
  new Date((await env?.animegarden.get('state/refresh-timestamp')) ?? new Date());

const hasTypeSearch = search.has('type');
const hasFansubSearch = search.has('fansubId');

function followSearch(params: Record<string, string>) {
  const s = new URLSearchParams(search);
  for (const [key, value] of Object.entries(params)) {
    s.set(key, value);
  }
  return s.toString();
}
---

<!doctype html>
<html lang="zh-CN">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="description" content={description} />
    <meta name="generator" content={Astro.generator} />
    <ViewTransitions />

    <link rel="sitemap" href="/sitemap-index.xml" />
    {
      !url.startsWith('/detail/') && (
        <link rel="alternate" type="application/rss+xml" title="RSS Feeds" href={feed} />
      )
    }
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="alternate icon" sizes="64x64" href="/favicon.ico" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon-180x180.png" />
    <link rel="mask-icon" color="#FFFFFF" href="/favicon.svg" />
    {canonicalURL && <link rel="canonical" href={`https://${APP_HOST}${canonicalURL}`} />}
    <meta name="msapplication-TileColor" content="#FFFFFF" />
    <meta name="theme-color" content="#ffffff" />
    <script src="/src/pwa.ts"></script>
    {pwaInfo && <Fragment set:html={pwaInfo.webManifest.linkTag} />}

    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content="http://garden.breadio.wiki/twitter.jpg" />

    <Analytics />

    <title>{`${title ? `${title} | ` : ''}Anime Garden 動漫花園資源網第三方镜像站`}</title>
  </head>
  <body>
    <header class="w-full pt-8vh bg-[#fef8f7] border-b">
      <div class="text-4xl pb-10rem font-quicksand font-bold text-center select-none outline-none">
        <a href="/">🌸 Anime Garden</a>
      </div>
      <div class="relative z-100">
        <div class="vercel absolute top-[-7rem] w-full flex justify-center">
          <Search client:only="react" transition:persist />
        </div>
      </div>
      <div class="main flex gap6 hide-scrollbar justify-between select-none text-base-500">
        <div class="flex sm:gap6 lt-sm:gap4 justify-start">
          <a href="/" class="header-item block" x-active={active === 'home'}>首页</a>
          <a href="/anime" class="header-item block" x-active={active === 'anime'}>动画</a>
          <a
            href="/resources/1"
            class="header-item block"
            x-active={url.startsWith('/resources/') && active === 'all'}>所有资源</a
          >
          <div class="header-item cursor-pointer" x-active={active === 'type'}>
            <Dropdown>
              <span>类型</span>
              <div slot="dropdown" class="mt4">
                <div
                  class="w-[120px] max-h-[600px] lt-sm:max-h-[360px] overflow-y-auto rounded-md border shadow-box bg-light-100 divide-y"
                >
                  {
                    hasTypeSearch && (
                      <a
                        href={`/resources/1?${followSearch({ type: '' })}`}
                        class="px2 py1 block text-base-600 text-link-active"
                      >
                        所有
                      </a>
                    )
                  }
                  {
                    types.map((t) => (
                      <a
                        href={`/resources/1?${followSearch({ type: t })}`}
                        class="px2 py1 block text-base-600 text-link-active"
                      >
                        {t}
                      </a>
                    ))
                  }
                </div>
              </div>
            </Dropdown>
          </div>
          <div class="header-item cursor-pointer" x-active={active === 'fansub'}>
            <Dropdown>
              <span>字幕组</span>
              <div slot="dropdown" class="mt4">
                <div
                  id="fansub-dropdown"
                  class="w-[180px] max-h-[600px] lt-sm:(max-w-[140px] max-h-[360px]) overflow-y-auto rounded-md border shadow-box bg-light-100 divide-y"
                >
                  {
                    hasFansubSearch && (
                      <a
                        href={`/resources/1?${followSearch({ fansubId: '' })}`}
                        class="px2 py1 block text-base-600 text-link-active"
                      >
                        所有
                      </a>
                    )
                  }
                  {
                    fansubs.map((t) => (
                      <a
                        href={`/resources/1?${followSearch({ fansubId: '' + t.id })}`}
                        class="fansub-item px2 py1 block text-base-600 text-link-active"
                        data-fansub-id={t.id}
                        data-fansub-name={t.name}
                      >
                        {t.name}
                      </a>
                    ))
                  }
                </div>
              </div>
            </Dropdown>
          </div>
          <a href="https://share.dmhy.org/" target="_blank" class="header-item block lt-sm:hidden"
            >动漫花园</a
          >
        </div>
        <div>
          {
            feed && (
              <a
                href={feed}
                target="_blank"
                class="header-item lt-sm:hidden block text-[#ee802f] hover:(!text-[#ff7800] !border-b-[#ff7800])"
              >
                <>
                  <span class="i-carbon-rss mr1" />
                  <span>RSS</span>
                </>
              </a>
            )
          }
        </div>
      </div>
    </header>
    <main class="main pb-8vh" transition:animate="slide">
      <slot />
    </main>
    <div class="border-t pb-4vh"></div>
    <footer class="main pb-8vh select-none [&>div]:(flex items-center)" transition:persist>
      <div font-sm text-base-400>
        <span class="mr1 text-sm i-carbon-update-now op-80"></span>
        Refreshed at {timestamp.toLocaleString('zh-CN', { timeZone: 'Asia/ShangHai' })}
      </div>
      <div font-sm text-base-400>
        <span class="mr1 text-sm i-devicon-github op-80"></span>
        <a href="https://github.com/yjl9903/AnimeGarden" target="_blank" class="text-link-active"
          >yjl9903/AnimeGarden</a
        >
      </div>
      <div font-sm text-base-400>
        <span class="mr1 text-sm i-devicon-astro op-80"></span>
        Powered by&nbsp;<a class="text-link-active" href="https://astro.build/" target="_blank"
          >Astro</a
        >
      </div>
      <div font-sm text-base-400>
        <span class="mr1 text-sm i-custom-zeabur op-80"></span>
        Hosted on&nbsp;<a
          class="text-link-active"
          href="https://zeabur.com?referralCode=yjl9903"
          target="_blank">Zeabur</a
        >
      </div>
    </footer>

    <div class="animegarden-toaster">
      <Toaster client:only="react" position="bottom-center" />
    </div>
    <div class="main-menu fixed z-100">
      <Menu client:idle transition:persist />
    </div>

    <Loading />

    <script src="../logic/notification.tsx"></script>
    <script src="../logic/prefer.ts"></script>

    <style is:global>
      @import '@onekuma/preset.css';

      @import '../styles/cmdk.css';
      @import '../styles/sonner.css';

      :root {
        /* --accent: 124, 58, 237; */
        --accent: 0, 204, 170;
        --accent-gradient: linear-gradient(
          45deg,
          rgb(var(--accent)),
          /* #da62c4 30%, */ #08c,
          white 60%
        );

        --color-bg-primary: #fcfcfc;
        --color-bg-secondary: #fafafa;
      }

      html {
        background-color: var(--color-bg-primary);

        @apply: font-sans;
      }

      code {
        @apply: font-mono;
      }

      .main {
        /* prettier-ignore */
        @apply: mx-auto lg:w-[80vw] md:w-[46rem] lt-md:w-[95vw];
      }

      .main-menu {
        @apply: bottom-16 left-[92vw] lt-md: left-[82vw];
      }

      .text-gradient {
        background-image: var(--accent-gradient);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-size: 400%;
        background-position: 0%;
      }

      .text-link {
        /* prettier-ignore */
        @apply: text-sky-700 hover:text-sky-500;
      }

      .text-link-active {
        /* prettier-ignore */
        @apply: hover:text-sky-600;
      }

      .hide-scrollbar {
        -ms-overflow-style: none;
        scrollbar-width: none;
      }

      .hide-scrollbar::-webkit-scrollbar {
        display: none; /* Safari and Chrome */
      }

      /* Header style */
      .header-item {
        @apply: py2 border-b border-b-3 border-transparent w-max;
        /* prettier-ignore */
        @apply: hover:text-base-800 hover:border-dark-700;
      }

      .header-item[x-active] {
        @apply: border-orange-500;
      }

      .animegarden-toaster [data-sonner-toast] [data-title] {
        font-weight: bold;
      }

      .animegarden-toaster [data-sonner-toast] [data-description] {
        @apply: mt-1 mb-1;
      }

      .animegarden-toaster [data-sonner-toast][data-styled='true'] {
        flex-direction: column;
        align-items: start;

        --toast-button-margin-start: 0;
      }

      .animegarden-toaster [data-sonner-toast] [data-button] {
        display: inline-flex;
      }
    </style>
  </body>
</html>
