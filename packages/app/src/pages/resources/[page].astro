---
import { parseSearchURL } from 'animegarden';

import Layout from '../../layouts/Layout.astro';
import FilterCard from '../../components/Filter.astro';
import Pagination from '../../components/Pagination.astro';
import ResourceTable from '../../components/ResourceTable.astro';
import ErrorNotification from '../../components/Error.astro';

import { generateFeed } from '../../logic/feed';
import { getRuntimeEnv } from '../../utils';
import { wfetch, fetchResources } from '../../fetch';
import { resolveFilterOptions } from '@/logic/filter';

const { page: _page } = Astro.params;
const page = _page ? +_page : 1;

const url = Astro.url;
const params = parseSearchURL(url.searchParams, { pageSize: 80 });

const env = getRuntimeEnv(Astro.locals);

const resp = await fetchResources(
  { ...params, page },
  {
    fetch: wfetch(env?.worker)
  }
);

const feedURL = `/feed.xml?filter=${generateFeed(Astro.url.searchParams)}`;
const { ok, complete, resources, filter: searchParams, timestamp } = resp;

const filter = searchParams ? resolveFilterOptions(searchParams) : undefined;
const { fansubs, type, before, after, search, include } = filter;

const active = fansubs && fansubs.length === 1 ? 'fansub' : type ? 'type' : 'all';
const title = inferTitle();

function inferTitle() {
  if (search && search.length > 0) {
    return `搜索 ${search.join(' ')}`;
  }
  if (include && include.length > 0) {
    return `搜索 ${include.join(' ')}`;
  }
  if (type) {
    if (fansubs && fansubs.length === 1) {
      return `所有${fansubs[0].name}的${type.name}资源`;
    } else {
      return `所有${type.name}`;
    }
  }
  if (fansubs && fansubs.length === 1) {
    return `所有${fansubs[0].name}的资源`;
  }
  return '所有资源';
}
---

<Layout
  active={active}
  title={title}
  timestamp={timestamp}
  canonicalURL={`/resources/${page}?${url.searchParams.toString()}`}
  feedURL={feedURL}
>
  <div class="mt-4vh w-full">
    {
      ok ? (
        <>
          {(type || search.length > 0 || include.length > 0 || before || after || fansubs) && (
            <FilterCard filter={filter} feedURL={feedURL} />
          )}
          {resources.length > 0 ? (
            <ResourceTable resources={resources} />
          ) : (
            <div class="h-20 text-2xl text-orange-700/80 flex items-center justify-center">
              <span class="mr2 i-carbon-query" />
              <span>没有查找到相应的资源</span>
            </div>
          )}
          {!(complete && page === 1) ? (
            <Pagination
              page={page}
              go={(page) => `/resources/${page}${url.search}`}
              hasPrev={page > 1}
              hasNext={!complete}
            />
          ) : (
            <div />
          )}
        </>
      ) : (
        <ErrorNotification />
      )
    }
  </div>

  <!-- Pass fetch response to the client -->
  <div id="fetch-response" class="hidden" data-filter={JSON.stringify(searchParams)}></div>

  <style>
    .keyword {
      display: inline-flex;
      justify-content: end;
    }
  </style>
</Layout>
